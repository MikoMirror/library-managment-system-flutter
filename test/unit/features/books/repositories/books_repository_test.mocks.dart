// Mocks generated by Mockito 5.4.5 from annotations
// in library_management_system/test/unit/features/books/repositories/books_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:library_management_system/core/services/firestore/books_firestore_service.dart'
    as _i3;
import 'package:library_management_system/features/books/enums/sort_type.dart'
    as _i8;
import 'package:library_management_system/features/books/models/book.dart'
    as _i5;
import 'package:library_management_system/features/dashboard/models/borrowing_trend_point.dart'
    as _i6;
import 'package:library_management_system/features/reservation/models/reservation.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCollectionReference_1<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentReference_2<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentReference<T> {
  _FakeDocumentReference_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentSnapshot_3<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BooksFirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBooksFirestoreService extends _i1.Mock
    implements _i3.BooksFirestoreService {
  MockBooksFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i2.FirebaseFirestore);

  @override
  _i2.CollectionReference<Map<String, dynamic>> getCollection(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#getCollection, [path]),
            returnValue: _FakeCollectionReference_1<Map<String, dynamic>>(
              this,
              Invocation.method(#getCollection, [path]),
            ),
          )
          as _i2.CollectionReference<Map<String, dynamic>>);

  @override
  _i4.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>> getDocumentStream(
    String? bookId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getDocumentStream, [bookId]),
            returnValue:
                _i4.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>>.empty(),
          )
          as _i4.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>>);

  @override
  _i4.Future<void> addBook(_i5.Book? book) =>
      (super.noSuchMethod(
            Invocation.method(#addBook, [book]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Stream<List<_i5.Book>> getAllBooks() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBooks, []),
            returnValue: _i4.Stream<List<_i5.Book>>.empty(),
          )
          as _i4.Stream<List<_i5.Book>>);

  @override
  _i4.Future<void> updateBookQuantity(String? bookId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookQuantity, [bookId, quantity]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> rateBook(String? bookId, String? userId, double? rating) =>
      (super.noSuchMethod(
            Invocation.method(#rateBook, [bookId, userId, rating]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Stream<bool> getFavoriteStatus(String? userId, String? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteStatus, [userId, bookId]),
            returnValue: _i4.Stream<bool>.empty(),
          )
          as _i4.Stream<bool>);

  @override
  _i4.Future<void> updateBook(_i5.Book? book) =>
      (super.noSuchMethod(
            Invocation.method(#updateBook, [book]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i2.DocumentReference<Map<String, dynamic>> getDocumentReference(
    String? collection,
    String? documentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getDocumentReference, [collection, documentId]),
            returnValue: _FakeDocumentReference_2<Map<String, dynamic>>(
              this,
              Invocation.method(#getDocumentReference, [
                collection,
                documentId,
              ]),
            ),
          )
          as _i2.DocumentReference<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getBookStats() =>
      (super.noSuchMethod(
            Invocation.method(#getBookStats, []),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<List<_i6.BorrowingTrendPoint>> getBorrowingTrends({
    required DateTime? startDate,
    required DateTime? endDate,
    required String? status,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBorrowingTrends, [], {
              #startDate: startDate,
              #endDate: endDate,
              #status: status,
            }),
            returnValue: _i4.Future<List<_i6.BorrowingTrendPoint>>.value(
              <_i6.BorrowingTrendPoint>[],
            ),
          )
          as _i4.Future<List<_i6.BorrowingTrendPoint>>);

  @override
  _i4.Future<List<_i7.Reservation>> getReservationsForReport(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getReservationsForReport, [startDate, endDate]),
            returnValue: _i4.Future<List<_i7.Reservation>>.value(
              <_i7.Reservation>[],
            ),
          )
          as _i4.Future<List<_i7.Reservation>>);

  @override
  _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>> getBooksStream({
    _i8.SortType? sortType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBooksStream, [], {#sortType: sortType}),
            returnValue:
                _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>>.empty(),
          )
          as _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i4.Future<void> addDocument(
    String? collection,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addDocument, [collection, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateDocument(
    String? collection,
    String? id,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDocument, [collection, id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteDocument(String? collection, String? documentId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDocument, [collection, documentId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.DocumentSnapshot<Object?>> getDocument(
    String? collection,
    String? documentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getDocument, [collection, documentId]),
            returnValue: _i4.Future<_i2.DocumentSnapshot<Object?>>.value(
              _FakeDocumentSnapshot_3<Object?>(
                this,
                Invocation.method(#getDocument, [collection, documentId]),
              ),
            ),
          )
          as _i4.Future<_i2.DocumentSnapshot<Object?>>);

  @override
  _i4.Future<_i2.DocumentSnapshot<Object?>> getNestedDocument(
    String? collection,
    String? documentId,
    String? subcollection,
    String? subdocumentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getNestedDocument, [
              collection,
              documentId,
              subcollection,
              subdocumentId,
            ]),
            returnValue: _i4.Future<_i2.DocumentSnapshot<Object?>>.value(
              _FakeDocumentSnapshot_3<Object?>(
                this,
                Invocation.method(#getNestedDocument, [
                  collection,
                  documentId,
                  subcollection,
                  subdocumentId,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.DocumentSnapshot<Object?>>);

  @override
  _i2.DocumentReference<Object?> getNestedDocumentReference(
    String? collection,
    String? documentId,
    String? subcollection,
    String? subdocumentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getNestedDocumentReference, [
              collection,
              documentId,
              subcollection,
              subdocumentId,
            ]),
            returnValue: _FakeDocumentReference_2<Object?>(
              this,
              Invocation.method(#getNestedDocumentReference, [
                collection,
                documentId,
                subcollection,
                subdocumentId,
              ]),
            ),
          )
          as _i2.DocumentReference<Object?>);

  @override
  _i4.Stream<List<T>> getCollectionStream<T>({
    required String? collection,
    required T Function(Map<String, dynamic>, String)? fromMap,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCollectionStream, [], {
              #collection: collection,
              #fromMap: fromMap,
            }),
            returnValue: _i4.Stream<List<T>>.empty(),
          )
          as _i4.Stream<List<T>>);
}
