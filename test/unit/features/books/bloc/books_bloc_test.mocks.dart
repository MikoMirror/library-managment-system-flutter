// Mocks generated by Mockito 5.4.5 from annotations
// in library_management_system/test/unit/features/books/bloc/books_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:library_management_system/features/books/models/book.dart'
    as _i4;
import 'package:library_management_system/features/books/repositories/books_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BooksRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBooksRepository extends _i1.Mock implements _i2.BooksRepository {
  MockBooksRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> addBook(_i4.Book? book) =>
      (super.noSuchMethod(
            Invocation.method(#addBook, [book]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.Book>> getAllBooks() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBooks, []),
            returnValue: _i3.Stream<List<_i4.Book>>.empty(),
          )
          as _i3.Stream<List<_i4.Book>>);

  @override
  _i3.Stream<List<_i4.Book>> searchBooks(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchBooks, [query]),
            returnValue: _i3.Stream<List<_i4.Book>>.empty(),
          )
          as _i3.Stream<List<_i4.Book>>);

  @override
  _i3.Future<void> deleteBook(String? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBook, [bookId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateBookQuantity(String? bookId, int? quantity) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookQuantity, [bookId, quantity]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> rateBook(String? bookId, String? userId, double? rating) =>
      (super.noSuchMethod(
            Invocation.method(#rateBook, [bookId, userId, rating]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<Map<String, double>> getBookRatings(String? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#getBookRatings, [bookId]),
            returnValue: _i3.Future<Map<String, double>>.value(
              <String, double>{},
            ),
          )
          as _i3.Future<Map<String, double>>);

  @override
  _i3.Future<bool> getFavoriteStatus(String? userId, String? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteStatus, [userId, bookId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> toggleFavorite(String? userId, String? bookId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleFavorite, [userId, bookId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> incrementBookQuantity(
    String? bookId,
    int? incrementBy,
    _i5.Transaction? transaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#incrementBookQuantity, [
              bookId,
              incrementBy,
              transaction,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
